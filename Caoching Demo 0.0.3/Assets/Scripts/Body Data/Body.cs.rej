diff a/Caoching Demo 0.0.3/Assets/Scripts/Body Data/Body.cs b/Caoching Demo 0.0.3/Assets/Scripts/Body Data/Body.cs	(rejected hunks)
@@ -300,26 +300,31 @@
         //first try to get the recording from the recording manager. 
         BodyRecordingsMgr.Instance.TryGetRecordingByUuid(vRecUuid, PlayRecordingCallback);
     }
- 
+
     /// <summary>
     /// Callback action after a body frames recording has been retrieved
     /// </summary>
-    /// <param name="vBodyFrameRecording"></param>
-    private void PlayRecordingCallback(BodyFramesRecordingBase vBodyFrameRecording)
+    /// <param name="vBodyFramesRec"></param>
+    private void PlayRecordingCallback(BodyFramesRecording vBodyFramesRec)
     {
-        if (vBodyFrameRecording != null && vBodyFrameRecording.RecordingRawFramesCount > 0)
+        if (vBodyFramesRec != null && vBodyFramesRec.RecordingRawFrames.Count > 0)
         {
+<<<<<<< HEAD
             BodyFrame vBodyFrame = null;
             vBodyFrame = RawFrameConverter.ConvertRawFrame(vBodyFrameRecording.GetBodyRawFrameAt(0));
 
             //Setting the first frame as the initial frame
 
+=======
+            //Setting the first frame as the initial frame
+            BodyFrame vBodyFrame = RawFrameConverter.ConvertRawFrame(vBodyFramesRec.RecordingRawFrames[0]);
+>>>>>>> 096bb2ae014b51e65bce63c5e77e735a22c23b39
 
             SetInitialFrame(vBodyFrame);
             BodyFrameBuffer vBuffer1 = new BodyFrameBuffer();
 
             // mBodyFrameThread = new BodyFrameThread(bodyFramesRec.RecordingRawFrames, vBuffer1);
-            mBodyFrameThread = new BodyFrameThread(vBodyFrameRecording, vBuffer1);
+            mBodyFrameThread = new BodyFrameThread(vBodyFramesRec, vBuffer1);
             View.Init(this, vBuffer1);
             View.StartUpdating = true;
             mBodyFrameThread.Start();
