diff a/Caoching Demo 0.0.3/Assets/Scripts/Licensing/Controller/ApplicationStartupManager.cs b/Caoching Demo 0.0.3/Assets/Scripts/Licensing/Controller/ApplicationStartupManager.cs	(rejected hunks)
@@ -5,10 +5,11 @@
 * @date June 2016
 * Copyright Heddoko(TM) 2016,  all rights reserved
 */
- 
+
 using Assets.Scripts.Licensing.Authentication;
-using Assets.Scripts.Licensing.Model;
+using Assets.Scripts.Licensing.Model; 
 using Assets.Scripts.UI; 
+ 
 using HeddokoSDK.Models;
 using UIWidgets;
 using UnityEngine;
@@ -23,7 +24,6 @@
     {
         public UnityLoginControl LoginControl;
         public ApplicationBouncer Bouncer = new ApplicationBouncer();
-        public UnityViewFactory UnityViewFactory;
 
         /// <summary>
         /// Initializes parameters
@@ -31,11 +31,8 @@
        internal void Awake()
         {
             Init();
-            ViewFactory = UnityViewFactory;
         }
 
-
-
         public IViewFactory ViewFactory { get; private set; }
 
         public void Init()
@@ -48,6 +45,7 @@
             Bouncer.RegisterUserAccessActionEvent(UserStatusType.Banned, BannedUserHandler);
             Bouncer.RegisterUserAccessActionEvent(UserStatusType.NotActive, InactiveUserHandler);
             LoginControl.RegisterOnLoginEvent(Bouncer.ValidateUser);
+            ViewFactory = gameObject.AddComponent<UnityViewFactory>();
         }
 
         /// <summary>
@@ -58,7 +56,7 @@
               //Ask the bouncer if the license if valid
             if (vProfileModel.LicenseInfo != null)
             {
-                Bouncer.ValidateLicense(vProfileModel); 
+                Bouncer.ValidateLicense(vProfileModel);
             }
             else
             {
@@ -74,8 +72,6 @@
                  "This account has been banned. ";
             Notify.Template("FadingFadoutNotifyTemplate")
                 .Show(vMsg, customHideDelay: 5f, sequenceType: NotifySequence.First, clearSequence: true);
-            LoginControl.EnableControls();
-
         }
         /// <summary>
         /// Handler for inactive user event
@@ -86,8 +82,6 @@
                 "This account is not active. Please contact your license administrator for further support.";
             Notify.Template("FadingFadoutNotifyTemplate")
                 .Show(vMsg, customHideDelay: 5f, sequenceType: NotifySequence.First, clearSequence: true);
-            LoginControl.EnableControls();
-
         }
 
         /// <summary>
@@ -104,7 +98,8 @@
         {
             string vMsg =
                 "The provided license is inactive. Please contact your license administator for further support.";
-             Notify.Template("FadingFadoutNotifyTemplate")
+            Debug.Log("Inactive license");
+            Notify.Template("FadingFadoutNotifyTemplate")
                 .Show(vMsg, customHideDelay: 5f, sequenceType: NotifySequence.First, clearSequence: true);
         }
 
@@ -119,8 +114,7 @@
                   "The provided license has expired. Please contact your license administator for further support.";
             Notify.Template("FadingFadoutNotifyTemplate")
                 .Show(vMsg, customHideDelay: 5f, sequenceType: NotifySequence.First, clearSequence: true);
-            LoginControl.EnableControls();
-
+            Debug.Log("expired license");
 
         }/// <summary>
          /// Handler for deleted license event
@@ -132,8 +126,7 @@
                  "We could not find a license associated with your account. Please contact your license administator for further support.";
             Notify.Template("FadingFadoutNotifyTemplate")
                 .Show(vMsg, customHideDelay: 5f, sequenceType: NotifySequence.First, clearSequence: true);
-            LoginControl.EnableControls();
-
+            Debug.Log("deleted license");
         }
     }
 }
\ No newline at end of file
