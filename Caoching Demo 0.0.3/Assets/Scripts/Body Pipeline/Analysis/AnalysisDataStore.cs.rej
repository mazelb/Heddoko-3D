diff a/Caoching Demo 0.0.3/Assets/Scripts/Body Pipeline/Analysis/AnalysisDataStore.cs b/Caoching Demo 0.0.3/Assets/Scripts/Body Pipeline/Analysis/AnalysisDataStore.cs	(rejected hunks)
@@ -18,22 +18,21 @@
 namespace Assets.Scripts.Body_Pipeline.Analysis
 {
     /// <summary>
-    /// A data storage mechanism for analysis segments, mapping to a set of SegmentAnalyis. 
+    /// A data storage mechanism for analysis segments
     /// </summary>
     public class AnalysisDataStore
     {
-        private Dictionary<SegmentAnalysis, Dictionary<FieldInfo, AnalysisFieldDataStructure>> mStorage = new Dictionary<SegmentAnalysis, Dictionary<FieldInfo, AnalysisFieldDataStructure>>();
-        public List<Dictionary<FieldInfo, string>> SerializedList = new List<Dictionary<FieldInfo, string>>();
-        private List<float> mTimeStamps = new List<float>();
         private AnaylsisDataStoreSettings mAnaylsisDataStoreSettings; 
+        private Dictionary<SegmentAnalysis, Dictionary<FieldInfo,AnalysisFieldDataStructure>> mStorage = new Dictionary<SegmentAnalysis, Dictionary<FieldInfo,AnalysisFieldDataStructure>>();
+        private List<float> mTimeStamps = new List<float>();
         public AnalysisDataStoreSerialization mSerialization;
+        public List<Dictionary<FieldInfo, string>> mSerializedList = new List<Dictionary<FieldInfo, string>>();
         private int mFieldInfoCount;
         private int mCounter;
         private int mSubCount = 0;
-        public bool Ignore { get; set; }
-
+        public bool Ignore=false;
         /// <summary>
-        /// Constructor accepting a list of analysis segment, using reflection, sifts through fields with AnalysisAttributes marked as do not ignore.  
+        /// Initialize component 
         /// </summary>
         public AnalysisDataStore(List<SegmentAnalysis> vAnalysisSegments )
         {
@@ -129,9 +128,9 @@
             var vFields = mStorage[vKey];
             if (mCounter == 0)
             {
-                SerializedList.Add( new Dictionary<FieldInfo, string>());
+                mSerializedList.Add( new Dictionary<FieldInfo, string>());
             }
-            var vList = SerializedList.ElementAt(SerializedList.Count - 1);
+            var vList = mSerializedList.ElementAt(mSerializedList.Count - 1);
            
             foreach (var vKvPair in vFields)
             {
@@ -177,17 +176,8 @@
         {
             foreach (var vKvPair in mStorage)
             {
-                foreach (var vAnalysisFieldDataStructure in vKvPair.Value)
-                {
-                    vAnalysisFieldDataStructure.Value.ClearDataCollection();
-                }
-               // vKvPair.Value.Clear();
+                vKvPair.Value.Clear();
             }
-            SerializedList.Clear();
-            mTimeStamps.Clear();
-            mCounter = 0;
-            mSubCount = 0;
-
         }
     }
 }
\ No newline at end of file
